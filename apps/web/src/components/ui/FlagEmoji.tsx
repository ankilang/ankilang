import React from 'react'

interface FlagEmojiProps {
  flag: string
  className?: string
  fallback?: boolean
}

// Mapping des Ã©mojis drapeau vers des codes ISO pour les images de fallback
const flagToISO: Record<string, string> = {
  'ğŸ‡«ğŸ‡·': 'FR',
  'ğŸ‡ªğŸ‡¸': 'ES', 
  'ğŸ‡©ğŸ‡ª': 'DE',
  'ğŸ‡®ğŸ‡¹': 'IT',
  'ğŸ‡¯ğŸ‡µ': 'JP',
  'ğŸ‡¬ğŸ‡§': 'GB',
  'ğŸ‡·ğŸ‡º': 'RU',
  'ğŸ‡¨ğŸ‡³': 'CN',
  'ğŸ‡°ğŸ‡·': 'KR',
  'ğŸ‡µğŸ‡¹': 'PT',
  'ğŸ‡§ğŸ‡·': 'BR',
  'ğŸ‡¦ğŸ‡·': 'AR',
  'ğŸ‡ºğŸ‡¸': 'US',
  'ğŸ‡³ğŸ‡±': 'NL',
  'ğŸ‡µğŸ‡±': 'PL',
  'ğŸ‡¸ğŸ‡ª': 'SE',
  'ğŸ‡©ğŸ‡°': 'DK',
  'ğŸ‡³ğŸ‡´': 'NO',
  'ğŸ‡«ğŸ‡®': 'FI',
  'ğŸ‡¹ğŸ‡¼': 'TW',
  'ğŸ‡¸ğŸ‡¦': 'SA',
  'ğŸ‡¹ğŸ‡·': 'TR',
  'ğŸ‡§ğŸ‡¬': 'BG',
  'ğŸ‡¨ğŸ‡¿': 'CZ',
  'ğŸ‡¬ğŸ‡·': 'GR',
  'ğŸ‡ªğŸ‡ª': 'EE',
  'ğŸ‡®ğŸ‡±': 'IL',
  'ğŸ‡­ğŸ‡º': 'HU',
  'ğŸ‡®ğŸ‡©': 'ID',
  'ğŸ‡±ğŸ‡¹': 'LT',
  'ğŸ‡±ğŸ‡»': 'LV',
  'ğŸ‡·ğŸ‡´': 'RO',
  'ğŸ‡¸ğŸ‡°': 'SK',
  'ğŸ‡¸ğŸ‡®': 'SI',
  'ğŸ‡¹ğŸ‡­': 'TH',
  'ğŸ‡ºğŸ‡¦': 'UA',
  'ğŸ‡»ğŸ‡³': 'VN',
  'ğŸ‡²ğŸ‡½': 'MX'
}

const FlagEmoji: React.FC<FlagEmojiProps> = ({ flag, className = '', fallback = true }) => {
  const [useFallback, setUseFallback] = React.useState(false)
  const isoCode = flagToISO[flag]
  
  // DÃ©tecter si l'Ã©moji ne s'affiche pas (caractÃ¨re de remplacement)
  React.useEffect(() => {
    if (!fallback) return
    
    // CrÃ©er un Ã©lÃ©ment temporaire pour tester l'affichage
    const testElement = document.createElement('span')
    testElement.textContent = flag
    testElement.style.fontFamily = 'Apple Color Emoji, Segoe UI Emoji, Noto Color Emoji, Android Emoji'
    testElement.style.position = 'absolute'
    testElement.style.left = '-9999px'
    testElement.style.fontSize = '16px'
    document.body.appendChild(testElement)
    
    // VÃ©rifier si l'Ã©moji s'affiche correctement
    const rect = testElement.getBoundingClientRect()
    const isEmojiSupported = rect.width > 0 && rect.height > 0
    
    document.body.removeChild(testElement)
    
    if (!isEmojiSupported && isoCode) {
      setUseFallback(true)
    }
  }, [flag, fallback, isoCode])
  
  if (useFallback && isoCode) {
    return (
      <img
        src={`https://flagcdn.com/16x12/${isoCode.toLowerCase()}.png`}
        alt={`Drapeau ${isoCode}`}
        className={`inline-block ${className}`}
        style={{ width: '1em', height: '0.75em', objectFit: 'cover' }}
        onError={() => { setUseFallback(false); }}
      />
    )
  }
  
  return (
    <span className={`emoji-flag ${className}`}>
      {flag}
    </span>
  )
}

export default FlagEmoji
